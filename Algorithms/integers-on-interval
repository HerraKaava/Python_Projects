{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ab5e30c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9299e759",
   "metadata": {},
   "outputs": [],
   "source": [
    "# An array of 100 integers in the interval [0, 100]\n",
    "ran_array = np.random.randint(low=0, high=100, size=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "acab9c67",
   "metadata": {},
   "outputs": [],
   "source": [
    "def integers_on_interval(arr):\n",
    "    \"\"\"\n",
    "    Count how many integers in the input array fall within the following intervals:\n",
    "    [0, 10], [50, 100], [67, 75].\n",
    "    \n",
    "    Args:\n",
    "        arr: The input array of integer values to be analyzed.\n",
    "        \n",
    "    Returns:\n",
    "        dict: A dictionary containing the count of integers in each interval.\n",
    "    \"\"\"\n",
    "    # Create three helper variables to keep track of the counts\n",
    "    interval0_10 = 0\n",
    "    interval50_100 = 0\n",
    "    interval67_75 = 0\n",
    "    \n",
    "    for num in arr:\n",
    "        if 0 <= num <= 10:\n",
    "            interval0_10 += 1\n",
    "        if 50 <= num <= 100:\n",
    "            interval50_100 += 1\n",
    "        if 67 <= num <= 75:\n",
    "            interval67_75 += 1\n",
    "            \n",
    "    d = {\n",
    "        'Interval [0, 10]': interval0_10,\n",
    "        'Interval [50, 100]': interval50_100,\n",
    "        'Interval [67, 75]': interval67_75\n",
    "    }\n",
    "    return d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "62af9786",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([70, 95, 20, 23, 90, 16, 93, 58, 54, 37, 21, 12, 26, 44, 56, 72, 44,\n",
       "       21, 38, 36, 63, 16, 87, 53, 50,  6, 59, 43, 63, 88, 44, 14, 33, 90,\n",
       "       72, 72, 82, 14, 52, 24, 67, 64, 49, 95, 17, 75, 84, 96, 39, 28, 39,\n",
       "       89,  6, 68, 91,  6, 81, 39, 21, 87, 21, 38, 51, 44, 31, 49, 94, 44,\n",
       "       97, 21, 94, 88, 39, 63, 44, 70, 15, 86, 22, 90, 90, 68, 86, 26, 78,\n",
       "       16, 39, 73, 66,  3, 15, 61, 69, 99,  7, 93, 29, 11, 89, 16])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ran_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "038df547",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Interval [0, 10]': 5, 'Interval [50, 100]': 51, 'Interval [67, 75]': 11}"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "integers_on_interval(ran_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0758b28d",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr1 = np.array([5, 5, 5, 4, 4, 4, 5, 5, 9, 9])\n",
    "arr2 = np.array([101, 102, 103, 104, -100, -200])\n",
    "arr3 = np.array([10, 50, 67])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c44c860c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Interval [0, 10]': 10, 'Interval [50, 100]': 0, 'Interval [67, 75]': 0}"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "integers_on_interval(arr1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a8ca60cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Interval [0, 10]': 0, 'Interval [50, 100]': 0, 'Interval [67, 75]': 0}"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "integers_on_interval(arr2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "233648a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Interval [0, 10]': 1, 'Interval [50, 100]': 2, 'Interval [67, 75]': 1}"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "integers_on_interval(arr3)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
